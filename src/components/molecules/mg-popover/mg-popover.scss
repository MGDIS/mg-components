$position-size: 6px;

@mixin arrow-placement($position, $shadow-x, $shadow-y) {
  #{$position}: calc(-1 * #{$position-size});
  filter: drop-shadow(#{$shadow-x} #{$shadow-y} 5px hsla(var(--color-dark), 0.15));
}

:host {
  --mg-card-padding: 1.5rem;
  --mg-card-border: none;
  --mg-card-border-radius: 0.5rem;
  --mg-card-background: hsl(var(--mg-popover-background-color));
  position: relative;

  display: contents;
  &::slotted(*) {
    display: inline-block;
  }
}

.mg-popover {
  display: none;
  z-index: 2000;
  color: hsl(var(--mg-popover-font-color));

  mg-card {
    z-index: -1;
  }

  &[data-show] {
    display: block;
  }

  mg-button {
    float: right;
    margin-right: calc(0rem - (var(--default-size) - var(--mg-icon-regular-size)) / 2); // Without unit (rem) the value can not be negative
    margin-top: calc(0rem - (var(--default-size) - var(--mg-popover-title-font-size) * var(--line-height)) / 2);
    margin-left: 3rem;
  }

  &__arrow {
    visibility: hidden;
    &,
    &::before {
      // Display
      position: absolute;
      width: 2rem;
      height: 2rem;
      z-index: 2000;
      // Decoration
      background: hsl(var(--mg-popover-background-color));
    }
    &::before {
      visibility: visible;
      content: '';
      transform: rotate(45deg);
    }
  }

  &[data-popper-placement^='top'] > &__arrow {
    @include arrow-placement('bottom', 0, calc(#{$position-size} * 2));
  }

  &[data-popper-placement^='bottom'] > &__arrow {
    @include arrow-placement('top', 0, calc((-1 * #{$position-size}) * 2));
  }

  &[data-popper-placement^='left'] > &__arrow {
    @include arrow-placement('right', calc(#{$position-size} * 2), 0);
  }

  &[data-popper-placement^='right'] > &__arrow {
    @include arrow-placement('left', calc((-1 * #{$position-size}) * 2), 0);
  }

  &__title ::slotted([slot='title']) {
    margin: 0 0 1rem !important;
    font-size: var(--mg-popover-title-font-size) !important;
    font-weight: 600;
  }
}
