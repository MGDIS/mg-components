// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  labelHide: true
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title class="sr-only" identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  labelOnTop: true
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--label-on-top mg-input--select">
      <div class="mg-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  placeholder: 'placeholder'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="placeholder">
            <option value="">
              placeholder
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  placeholder: 'placeholder',
  placeholderDisabled: true
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="placeholder">
            <option value="">
              placeholder
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  placeholder: 'placeholder',
  placeholderDisabled: true,
  value: 'ble'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="placeholder">
            <option value="">
              placeholder
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  placeholder: 'placeholder',
  placeholderHide: true
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="placeholder">
            <option value="">
              placeholder
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  readonly: true
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--readonly mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <strong></strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  readonly: true,
  labelOnTop: true,
  tooltip: 'Tooltip message'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--label-on-top mg-input--readonly mg-input--select">
      <div class="mg-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-input__input-container">
        <strong></strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  readonly: true,
  value: 'o'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--readonly mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <strong>
          blo
        </strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  required: true,
  disabled: true,
  helpText: 'My help text',
  value: 'blu'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" disabled="" id="identifier" name="identifier" required="" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option selected="" value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  required: true,
  helpText: 'My help text',
  value: 'blu'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" required="" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option selected="" value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  required: true,
  readonly: true,
  helpText: 'My help text',
  value: 'blu'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--readonly mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <strong>
          blu
        </strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon icon="info-circle"></mg-icon>
          </mg-tooltip>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--label-on-top mg-input--select">
      <div class="mg-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
        <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
          <mg-icon icon="info-circle"></mg-icon>
        </mg-tooltip>
      </div>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args { label: 'label', identifier: 'identifier', items: [] }: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args { label: 'label', identifier: 'identifier', items: [Array] }: 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args { label: 'label', identifier: 'identifier', items: [Array] }: 2`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should render with args { label: 'label', identifier: 'identifier', items: [Array] }: 3`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <optgroup label="blu">
              <option value="blu">
                blu
              </option>
              <option value="bli">
                bli
              </option>
            </optgroup>
            <optgroup label="blo">
              <option value="blo">
                blo
              </option>
            </optgroup>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: '' }) 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 0 }) 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 0 }) 2`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 1 }) 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 1 }) 2`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 2 }) 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 2 }) 2`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="Batman">
              Batman
            </option>
            <option value="Robin">
              Robin
            </option>
            <option value="Joker">
              Joker
            </option>
            <option value="Bane">
              Bane
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select Should trigger events for ({ items: [Array], selectedOption: 3 }) 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="identifier-help-text" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div class="mg-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select display error message with locale: fr 1`] = `
<mg-input-select lang="fr">
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input mg-input__input--has-error">
          <select aria-describedby="identifier-error" class="mg-input__box" id="identifier" name="identifier" required="" title="Sélectionnez une valeur">
            <option value="">
              Sélectionnez une valeur
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div aria-live="assertive" class="mg-input__error" id="identifier-error">
          Ce champ est obligatoire.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select display error message with locale: xx 1`] = `
<mg-input-select lang="xx">
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input mg-input__input--has-error">
          <select aria-describedby="identifier-error" class="mg-input__box" id="identifier" name="identifier" required="" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div aria-live="assertive" class="mg-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select display error with displayError component's public method 1`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" required="" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select display error with displayError component's public method 2`] = `
<mg-input-select>
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input mg-input__input--has-error">
          <select aria-describedby="identifier-error" class="mg-input__box" id="identifier" name="identifier" required="" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="batman">
              batman
            </option>
            <option value="robin">
              robin
            </option>
            <option value="joker">
              joker
            </option>
            <option value="bane">
              bane
            </option>
          </select>
        </div>
        <div aria-live="assertive" class="mg-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-select patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input mg-input__input--has-error">
          <select aria-describedby="identifier-error" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
        <div aria-live="assertive" class="mg-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-select patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input">
          <select aria-describedby="" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-select patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-input mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <div class="mg-input__input mg-input__input--has-error">
          <select aria-describedby="identifier-error" class="mg-input__box" id="identifier" name="identifier" title="Select a value">
            <option value="">
              Select a value
            </option>
            <option value="blu">
              blu
            </option>
            <option value="bli">
              bli
            </option>
            <option value="blo">
              blo
            </option>
            <option value="bla">
              bla
            </option>
          </select>
        </div>
        <div aria-live="assertive" class="mg-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;

exports[`mg-input-select validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-select patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-input mg-input--readonly mg-input--select">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-input__input-container">
        <strong></strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-select>
`;
