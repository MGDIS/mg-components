/* Variables */
$mg-button-border-width: 0.1rem;
$mg-button-padding-horizontal: 1.1rem;

/* Mixins */
@mixin style-gradient($name, $backgroundColor, $fontColor, $hasVariable: false) {
  @if $hasVariable {
    $backgroundColor: --mg-button-#{$name}-color;
    $fontColor: --mg-button-#{$name}-font-color;
  } @else {
    $backgroundColor: --color-#{$backgroundColor};
    $fontColor: --color-#{$fontColor};
  }
  &.mg-button--#{$name} {
    // Decoration
    border-color: hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), var(#{$backgroundColor}-l)); /* IE FIX */
    border-color: hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), calc(var(#{$backgroundColor}-l) - 10%));
    // Font
    color: hsl(var(#{$fontColor}));
    // Background
    background: hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), var(#{$backgroundColor}-l)); /* IE FIX */
    background: linear-gradient(
      to bottom,
      hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), var(#{$backgroundColor}-l)),
      hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), calc(var(#{$backgroundColor}-l) - 10%))
    );

    // Hover
    // Only apply if not disabled
    &:hover:not([disabled], [aria-disabled], .disabled),
    &:focus:not([disabled], [aria-disabled], .disabled),
    &:active:not([disabled], [aria-disabled], .disabled) {
      background: hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), var(#{$backgroundColor}-l));
    }
  }
}

/* Styles */
.mg-button {
  // Display
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: calc((var(--default-size) - (2 * $mg-button-border-width) - (var(--font-size) * var(--line-height))) / 2) $mg-button-padding-horizontal;
  min-height: var(--default-size);
  box-sizing: border-box;
  // Decoration
  border-radius: var(--mg-button-border-radius);
  cursor: pointer;
  background-image: none;
  border: $mg-button-border-width solid;
  // Font
  font-family: inherit;
  text-decoration: none;
  font-weight: normal;
  text-align: left;
  // Other
  touch-action: manipulation;

  // Disabled style
  &[disabled],
  &[aria-disabled],
  &.disabled {
    opacity: var(--mg-button-disabled-opacity);
    cursor: not-allowed;
  }

  // Icon only button
  &.mg-button--icon {
    // Display
    padding: 0;
    justify-content: center;
    width: var(--default-size);
    height: var(--default-size);
    // Decoration
    border-radius: var(--mg-button-icon-border-radius);
  }

  // Gradient style
  @include style-gradient('primary', null, null, true);
  @include style-gradient('secondary', null, null, true);
  @include style-gradient('danger', 'danger', 'neutral');
  @include style-gradient('danger-alt', 'neutral', 'danger');
  @include style-gradient('info', 'info', 'neutral');

  // Flat style
  &.mg-button--flat {
    background: none;
    border: none;

    // Hover
    // Only apply if not disabled
    &:hover:not([disabled], [aria-disabled], .disabled),
    &:focus:not([disabled], [aria-disabled], .disabled),
    &:active:not([disabled], [aria-disabled], .disabled) {
      background: hsla(var(--color-dark), 0.1);
    }
  }

  ::slotted(mg-icon) {
    display: inline-flex;
    flex-shrink: 0;
    line-height: 1;
    margin: auto 0;
  }

  &:not(.mg-button--icon) mg-icon,
  &:not(.mg-button--icon) ::slotted(mg-icon) {
    margin-right: 0.6rem;
  }

  &__content {
    display: flex;
    align-items: baseline;
  }

  &--loading {
    & > mg-icon {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
    .mg-button__content {
      opacity: 0;
    }
  }

  ::slotted(mg-badge) {
    margin-left: 0.3rem;
  }
}

mg-button {
  display: inline-block;
}

.mg-button,
mg-button {
  vertical-align: middle;
  max-width: 100%;
}
