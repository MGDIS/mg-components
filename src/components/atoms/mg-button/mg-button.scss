@mixin style-gradient($name, $backgroundColor, $fontColor, $hasVariable: false) {
  @if $hasVariable {
    $backgroundColor: --mg-button-#{$name}-color;
    $fontColor: --mg-button-#{$name}-font-color;
  } @else {
    $backgroundColor: --color-#{$backgroundColor};
    $fontColor: --color-#{$fontColor};
  }
  &.mg-button--#{$name} {
    // Decoration
    border-color: hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), calc(var(#{$backgroundColor}-l) - 10%));
    // Font
    color: hsl(var(#{$fontColor}));
    // Background
    background: linear-gradient(
      to bottom,
      hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), calc(var(#{$backgroundColor}-l))),
      hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), calc(var(#{$backgroundColor}-l) - 10%))
    );

    // Hover
    // Only apply if not disabled
    &:hover:not([disabled], .disabled),
    &:focus:not([disabled], .disabled),
    &:active:not([disabled], .disabled) {
      background: hsl(var(#{$backgroundColor}-h), var(#{$backgroundColor}-s), calc(var(#{$backgroundColor}-l)));
    }
  }
}

.mg-button {
  // Display
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  min-height: var(--default-size);
  box-sizing: border-box;
  padding: 0.7435rem 1.1rem;
  // Decoration
  border-radius: var(--mg-button-border-radius);
  cursor: pointer;
  background-image: none;
  border: 0.1rem solid;
  // Font
  font-weight: normal;
  text-align: left;
  line-height: var(--line-height);
  // Other
  touch-action: manipulation;

  // Disabled style
  &[disabled],
  &.disabled {
    cursor: not-allowed;
    opacity: var(--mg-button-disabled-opacity);
  }

  // Icon only button
  &.mg-button--icon {
    // Display
    justify-content: center;
    width: var(--default-size);
    height: var(--default-size);
    // Decoration
    border-radius: var(--mg-button-icon-border-radius);
  }

  // Gradient style
  @include style-gradient('primary', null, null, true);
  @include style-gradient('secondary', null, null, true);
  @include style-gradient('danger', 'danger', 'neutral');
  @include style-gradient('danger-alt', 'neutral', 'danger');
  @include style-gradient('info', 'info', 'neutral');

  // Flat style
  &.mg-button--flat {
    background: none;
    border: none;

    // Hover
    // Only apply if not disabled
    &:hover:not([disabled], .disabled),
    &:focus:not([disabled], .disabled),
    &:active:not([disabled], .disabled) {
      background: hsla(var(--color-dark), 0.1);
    }
  }

  // Space between two buttons
  &:not(:last-child) {
    margin-right: 1rem;
  }
}

mg-button {
  display: inline-block;
  vertical-align: middle;
  margin-bottom: var(--mg-button-margin-bottom, 0); // this way it can be changed in another component

  &:not([is-icon]) mg-icon {
    margin-right: 0.6rem;
  }

  &:not(:last-child) {
    margin-right: 1rem;
  }
}

.mg-button,
mg-button {
  mg-icon {
    display: inline-flex;
    line-height: 1;
  }
}
