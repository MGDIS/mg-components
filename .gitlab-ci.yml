image: $DOCKER_REGISTRE_URL/$DOCKER_REGISTRE_NAMESPACE_INT/node-build:14-alpine

# workflow stages are imported from templates
include:
  - project: 'build/gitlab/gitlab-ci'
    file: '/templates/release-module.yml'

stages:
  - test
  - sonar
  - dist
  - artifact
  - review
  - release
  - deploy

.install:
  before_script:
    - npm ci

lint:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG == null
  extends:
    - .install
  script:
    - npm run lint

audit:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - gitlabci-npm-audit break-build
    - gitlabci-npm-audit-compare

outdated:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG == null
  before_script:
    - npm ci
  script:
    # Check the npm outdated output
    # break-build not yet
    - gitlabci-npm-outdated

test:
  stage: test
  image: $DOCKER_REGISTRE_URL/$DOCKER_REGISTRE_NAMESPACE_INT/node-build:14-debian
  rules:
    # except tags
    - if: $CI_COMMIT_TAG == null
  extends:
    - .install
  script:
    - npm test
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - coverage
    reports:
      junit:
        - coverage/junit.xml

sonar:
  stage: sonar
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - /scripts/quality-gate-sonar.sh A+++
    - sonar-scanner -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_KEY -Dsonar.projectKey=$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG -Dsonar.projectName=$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    - gitlabci-sonar-compare report
  needs:
    - test

dist:
  stage: dist
  rules:
    - when: always
  extends:
    - .install
  script:
    # bump version with feature branch name
    - export version=`cat package.json | jq -r '.version'`
    - if [ -z $CI_COMMIT_TAG ]; then version=$version-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID && npm version --no-git-tag-version $version; fi;
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - package.json
      - dist
      - loader

artifact:
  stage: artifact
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - npm publish
  needs:
    - dist

review_app:
  stage: review
  extends:
    - .install
  script:
    - npm run storybook:build
    - mv storybook-static public
  artifacts:
    paths:
      - public
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: 'http://core.pages.mgdis.fr/-/core-ui/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/public/index.html'
    on_stop: stop_review_app
    auto_stop_in: 1 week
  rules:
    - if: $CI_MERGE_REQUEST_ID

stop_review_app:
  stage: review
  script:
    - echo "ðŸ‘‹"
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  extends:
    - .install
  script:
    - npm run storybook:build
    - mv storybook-static public
  artifacts:
    paths:
      - public
