{
  "timestamp": "2022-03-09T09:08:01",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.14.0",
    "typescriptVersion": "4.5.4"
  },
  "components": [
    {
      "filePath": "./src/components/atoms/mg-badge/mg-badge.tsx",
      "encapsulation": "shadow",
      "tag": "mg-badge",
      "readme": "This atom refers to the [PDA9-315](https://jira.mgdis.fr/browse/PDA9-315).\n",
      "docs": "This atom refers to the [PDA9-315](https://jira.mgdis.fr/browse/PDA9-315).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Badge label. Include short description.\nRequired for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "outline",
          "type": "boolean",
          "mutable": false,
          "attr": "outline",
          "reflectToAttr": false,
          "docs": "Define if button is using outline style",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Badge value",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Define button variant",
          "docsTags": [],
          "default": "variants[variants.length - 1]",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-tabs"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "mg-tabs": [
          "mg-badge"
        ]
      }
    },
    {
      "filePath": "./src/components/atoms/mg-button/mg-button.tsx",
      "encapsulation": "scoped",
      "tag": "mg-button",
      "readme": "This atom refers to the [PDA9-67](https://jira.mgdis.fr/browse/PDA9-67).\n",
      "docs": "This atom refers to the [PDA9-67](https://jira.mgdis.fr/browse/PDA9-67).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disableOnClick",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-on-click",
          "reflectToAttr": false,
          "docs": "Option to set input disable on click, in order to prevent multi-click.\nParent component have to remove the attribute 'disabled' when the process ends.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "Disable button",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-button')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isIcon",
          "type": "boolean",
          "mutable": false,
          "attr": "is-icon",
          "reflectToAttr": false,
          "docs": "Define if button is round.\nUsed for icon button.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "aria-label\nIn case button text is not explicit enough",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Define button variant",
          "docsTags": [],
          "default": "variants[0]",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-message",
        "mg-pagination",
        "mg-popover"
      ],
      "dependencies": [
        "mg-icon"
      ],
      "dependencyGraph": {
        "mg-button": [
          "mg-icon"
        ],
        "mg-message": [
          "mg-button"
        ],
        "mg-pagination": [
          "mg-button"
        ],
        "mg-popover": [
          "mg-button"
        ]
      }
    },
    {
      "filePath": "./src/components/atoms/mg-character-left/mg-character-left.tsx",
      "encapsulation": "scoped",
      "tag": "mg-character-left",
      "readme": "This atom refers to thes [PDA9-64](https://jira.mgdis.fr/browse/PDA9-64), [PDA9-723](https://jira.mgdis.fr/browse/PDA9-723).\n",
      "docs": "This atom refers to thes [PDA9-64](https://jira.mgdis.fr/browse/PDA9-64), [PDA9-723](https://jira.mgdis.fr/browse/PDA9-723).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "characters",
          "type": "string",
          "mutable": false,
          "attr": "characters",
          "reflectToAttr": false,
          "docs": "Sets the characters to count",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Sets an `id` attribute.\nNeeded by the input for accessibility `aria-decribedby`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "Add maximum length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "template",
          "type": "string",
          "mutable": false,
          "attr": "template",
          "reflectToAttr": false,
          "docs": "Template to display remaining characters.\nMust have {counter} inside",
          "docsTags": [],
          "default": "messages.nbCharLeft",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-input-checkbox",
        "mg-input-date",
        "mg-input-numeric",
        "mg-input-password",
        "mg-input-radio",
        "mg-input-select",
        "mg-input-text",
        "mg-input-textarea",
        "mg-input-toggle"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "mg-input-checkbox": [
          "mg-character-left"
        ],
        "mg-input-date": [
          "mg-character-left"
        ],
        "mg-input-numeric": [
          "mg-character-left"
        ],
        "mg-input-password": [
          "mg-character-left"
        ],
        "mg-input-radio": [
          "mg-character-left"
        ],
        "mg-input-select": [
          "mg-character-left"
        ],
        "mg-input-text": [
          "mg-character-left"
        ],
        "mg-input-textarea": [
          "mg-character-left"
        ],
        "mg-input-toggle": [
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/atoms/mg-icon/mg-icon.tsx",
      "encapsulation": "shadow",
      "tag": "mg-icon",
      "readme": "This atom refers to the [PDA9-744](https://jira.mgdis.fr/browse/PDA9-744).\n",
      "docs": "This atom refers to the [PDA9-744](https://jira.mgdis.fr/browse/PDA9-744).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Icon to display",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Define icon size",
          "docsTags": [],
          "default": "'regular'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "spin",
          "type": "boolean",
          "mutable": false,
          "attr": "spin",
          "reflectToAttr": false,
          "docs": "Make the icon spin",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Define icon variant\nAdd a background to the icon based on variant color",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-button",
        "mg-input-checkbox",
        "mg-input-date",
        "mg-input-numeric",
        "mg-input-password",
        "mg-input-radio",
        "mg-input-select",
        "mg-input-text",
        "mg-input-textarea",
        "mg-input-toggle",
        "mg-message",
        "mg-pagination",
        "mg-popover",
        "mg-tabs"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "mg-button": [
          "mg-icon"
        ],
        "mg-input-checkbox": [
          "mg-icon"
        ],
        "mg-input-date": [
          "mg-icon"
        ],
        "mg-input-numeric": [
          "mg-icon"
        ],
        "mg-input-password": [
          "mg-icon"
        ],
        "mg-input-radio": [
          "mg-icon"
        ],
        "mg-input-select": [
          "mg-icon"
        ],
        "mg-input-text": [
          "mg-icon"
        ],
        "mg-input-textarea": [
          "mg-icon"
        ],
        "mg-input-toggle": [
          "mg-icon"
        ],
        "mg-message": [
          "mg-icon"
        ],
        "mg-pagination": [
          "mg-icon"
        ],
        "mg-popover": [
          "mg-icon"
        ],
        "mg-tabs": [
          "mg-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-checkbox/mg-input-checkbox.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-checkbox",
      "readme": "This molecule refers to the [PDA9-70](https://jira.mgdis.fr/browse/PDA9-70).\n",
      "docs": "This molecule refers to the [PDA9-70](https://jira.mgdis.fr/browse/PDA9-70).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-checkbox')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputVerticalList",
          "type": "boolean",
          "mutable": false,
          "attr": "input-vertical-list",
          "reflectToAttr": false,
          "docs": "Define if inputs are display verticaly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Force invalid component",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Force valid component",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "CheckboxValue[]",
          "mutable": true,
          "reflectToAttr": false,
          "docs": "Component value\nIf item.value is `null`, checkbox will be indeterminate by default\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "CheckboxValue[]"
            }
          ],
          "optional": false,
          "required": true
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "CheckboxValue[]",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-checkbox": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-date/mg-input-date.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-date",
      "readme": "This atom refers to the [PDA9-65](https://jira.mgdis.fr/browse/PDA9-65).\n",
      "docs": "This atom refers to the [PDA9-65](https://jira.mgdis.fr/browse/PDA9-65).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-date')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Define input maximum date\nformat: yyyy-mm-dd",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Define input minimum date\nformat: yyyy-mm-dd",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-date": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-numeric/mg-input-numeric.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-numeric",
      "readme": "This atom refers to the [PDA9-181](https://jira.mgdis.fr/browse/PDA9-181).\n",
      "docs": "This atom refers to the [PDA9-181](https://jira.mgdis.fr/browse/PDA9-181).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-numeric')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "max",
          "type": "number",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Maximum value",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "number",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Minimum value",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Input placeholder.\nIt should be a word or short phrase that demonstrates the expected type of data, not a replacement for labels or help text.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Define numeric type",
          "docsTags": [],
          "default": "types[0]",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-numeric": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-password/mg-input-password.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-password",
      "readme": "This molecule refers to the [PDA9-769](https://jira.mgdis.fr/browse/PDA9-769)\n",
      "docs": "This molecule refers to the [PDA9-769](https://jira.mgdis.fr/browse/PDA9-769)",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-password')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Input placeholder.\nIt should be a word or short phrase that demonstrates the expected type of data, not a replacement for labels or help text.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-password": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-radio/mg-input-radio.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-radio",
      "readme": "This atom refers to the [PDA9-745](https://jira.mgdis.fr/browse/PDA9-745)\n",
      "docs": "This atom refers to the [PDA9-745](https://jira.mgdis.fr/browse/PDA9-745)",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-radio')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputVerticalList",
          "type": "boolean",
          "mutable": false,
          "attr": "input-vertical-list",
          "reflectToAttr": false,
          "docs": "Define if inputs are display verticaly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Force invalid component",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "items",
          "type": "RadioOption[] | string[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Items are the possible options to select\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "RadioOption[]"
            },
            {
              "type": "string[]"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Force valid component",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-radio": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-select/mg-input-select.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-select",
      "readme": "This atom refers to the [PDA9-72](https://jira.mgdis.fr/browse/PDA9-72).\n",
      "docs": "This atom refers to the [PDA9-72](https://jira.mgdis.fr/browse/PDA9-72).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-select')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Define input invalid state",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "items",
          "type": "SelectOption[] | string[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Items are the possible options to select",
          "docsTags": [],
          "values": [
            {
              "type": "SelectOption[]"
            },
            {
              "type": "string[]"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Input placeholder.\nIt should be a word or short phrase that demonstrates the expected type of data, not a replacement for labels or help text.",
          "docsTags": [],
          "default": "messages.input.select.placeholder",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholderDisabled",
          "type": "boolean",
          "mutable": false,
          "attr": "placeholder-disabled",
          "reflectToAttr": false,
          "docs": "Option to disable placeholder",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholderHide",
          "type": "boolean",
          "mutable": false,
          "attr": "placeholder-hide",
          "reflectToAttr": false,
          "docs": "Option to remove placeholder",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Define input valid state",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-pagination"
      ],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-select": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ],
        "mg-pagination": [
          "mg-input-select"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-text/mg-input-text.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-text",
      "readme": "This atom refers to the [PDA9-64](https://jira.mgdis.fr/browse/PDA9-64).\n\n## Use as search input\n\nDue to [accessibility recommendation](https://developer.mozilla.org/fr/docs/Web/HTML/Element/Input/search#les_champs_de_recherche_et_l%E2%80%99accessibilit%C3%A9), an `<input type=\"search\" />` must be used within a `<form role=\"search\" />` we recommend to use mg-input-text as in dedicated story.\n",
      "docs": "This atom refers to the [PDA9-64](https://jira.mgdis.fr/browse/PDA9-64).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "characterLeftTemplate",
          "type": "string",
          "mutable": false,
          "attr": "character-left-template",
          "reflectToAttr": false,
          "docs": "Template to use for characters left sentence",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "displayCharacterLeft",
          "type": "boolean",
          "mutable": false,
          "attr": "display-character-left",
          "reflectToAttr": false,
          "docs": "Define if component should display character left",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Input icon",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-text')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "Input max length",
          "docsTags": [],
          "default": "400",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "pattern",
          "type": "string",
          "mutable": false,
          "attr": "pattern",
          "reflectToAttr": false,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "patternErrorMessage",
          "type": "string",
          "mutable": false,
          "attr": "pattern-error-message",
          "reflectToAttr": false,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Input placeholder.\nIt should be a word or short phrase that demonstrates the expected type of data, not a replacement for labels or help text.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"search\" | \"text\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Input type",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-icon",
        "mg-tooltip",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-text": [
          "mg-icon",
          "mg-tooltip",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-textarea/mg-input-textarea.tsx",
      "encapsulation": "shadow",
      "tag": "mg-input-textarea",
      "readme": "This atom refers to the [PDA9-683](https://jira.mgdis.fr/browse/PDA9-683).\n",
      "docs": "This atom refers to the [PDA9-683](https://jira.mgdis.fr/browse/PDA9-683).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "characterLeftTemplate",
          "type": "string",
          "mutable": false,
          "attr": "character-left-template",
          "reflectToAttr": false,
          "docs": "Template to use for characters left sentence",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "displayCharacterLeft",
          "type": "boolean",
          "mutable": false,
          "attr": "display-character-left",
          "reflectToAttr": false,
          "docs": "Define if component should display character left",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-textarea')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": true,
          "attr": "invalid",
          "reflectToAttr": true,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "Input max length",
          "docsTags": [],
          "default": "4000",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "pattern",
          "type": "string",
          "mutable": false,
          "attr": "pattern",
          "reflectToAttr": false,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "patternErrorMessage",
          "type": "string",
          "mutable": false,
          "attr": "pattern-error-message",
          "reflectToAttr": false,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Input placeholder.\nIt should be a word or short phrase that demonstrates the expected type of data, not a replacement for labels or help text.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Define if input is required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "Define input pattern error message",
          "docsTags": [],
          "default": "3",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "valid",
          "type": "boolean",
          "mutable": true,
          "attr": "valid",
          "reflectToAttr": true,
          "docs": "Define input pattern to validate",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-textarea": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/atoms/mg-input-title/mg-input-title.tsx",
      "encapsulation": "scoped",
      "tag": "mg-input-title",
      "readme": "This atom refers to thes [PDA9-64](https://jira.mgdis.fr/browse/PDA9-64), [PDA9-723](https://jira.mgdis.fr/browse/PDA9-723).\n",
      "docs": "This atom refers to thes [PDA9-64](https://jira.mgdis.fr/browse/PDA9-64), [PDA9-723](https://jira.mgdis.fr/browse/PDA9-723).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Label input id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "isLegend",
          "type": "boolean",
          "mutable": false,
          "attr": "is-legend",
          "reflectToAttr": false,
          "docs": "Switch from label to fieldset sementic",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "If input is required an asterisk is added at the end of the label",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-input-checkbox",
        "mg-input-date",
        "mg-input-numeric",
        "mg-input-password",
        "mg-input-radio",
        "mg-input-select",
        "mg-input-text",
        "mg-input-textarea",
        "mg-input-toggle"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "mg-input-checkbox": [
          "mg-input-title"
        ],
        "mg-input-date": [
          "mg-input-title"
        ],
        "mg-input-numeric": [
          "mg-input-title"
        ],
        "mg-input-password": [
          "mg-input-title"
        ],
        "mg-input-radio": [
          "mg-input-title"
        ],
        "mg-input-select": [
          "mg-input-title"
        ],
        "mg-input-text": [
          "mg-input-title"
        ],
        "mg-input-textarea": [
          "mg-input-title"
        ],
        "mg-input-toggle": [
          "mg-input-title"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/inputs/mg-input-toggle/mg-input-toggle.tsx",
      "encapsulation": "scoped",
      "tag": "mg-input-toggle",
      "readme": "This molecule refers to the [PDA9-770](https://jira.mgdis.fr/browse/PDA9-770).\n",
      "docs": "This molecule refers to the [PDA9-770](https://jira.mgdis.fr/browse/PDA9-770).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Define if input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "Add a help text under the input, usually expected data format and example",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-input-toggle')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isIcon",
          "type": "boolean",
          "mutable": false,
          "attr": "is-icon",
          "reflectToAttr": false,
          "docs": "Define if toggle display icon",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isOnOff",
          "type": "boolean",
          "mutable": false,
          "attr": "is-on-off",
          "reflectToAttr": false,
          "docs": "Define if toggle have on/off style",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "items",
          "type": "ToggleValue[] | string[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Items are the possible options to select\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "ToggleValue[]"
            },
            {
              "type": "string[]"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Input label\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "labelHide",
          "type": "boolean",
          "mutable": false,
          "attr": "label-hide",
          "reflectToAttr": false,
          "docs": "Define if label is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOnTop",
          "type": "boolean",
          "mutable": false,
          "attr": "label-on-top",
          "reflectToAttr": false,
          "docs": "Define if label is displayed on top",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Input name\nIf not set the value equals the identifier",
          "docsTags": [],
          "default": "this.identifier",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "Define if input is readonly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tooltip",
          "type": "string",
          "mutable": false,
          "attr": "tooltip",
          "reflectToAttr": false,
          "docs": "Add a tooltip message next to the input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Component value",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "value-change",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when value change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-tooltip",
        "mg-icon",
        "mg-input-title",
        "mg-character-left"
      ],
      "dependencyGraph": {
        "mg-input-toggle": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/mg-message/mg-message.tsx",
      "encapsulation": "shadow",
      "tag": "mg-message",
      "readme": "This molecule refers to the [PDA9-140](https://jira.mgdis.fr/browse/PDA9-140).\n",
      "docs": "This molecule refers to the [PDA9-140](https://jira.mgdis.fr/browse/PDA9-140).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "closeButton",
          "type": "boolean",
          "mutable": false,
          "attr": "close-button",
          "reflectToAttr": false,
          "docs": "Define if message has a cross button\nRG 01: https://jira.mgdis.fr/browse/PDA9-140",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "delay",
          "type": "number",
          "mutable": false,
          "attr": "delay",
          "reflectToAttr": false,
          "docs": "Add a delay to hide/close message when it passed\nValue is defined in seconds and must greater than 2 seconds (PDA9-314 RG-06)",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hide",
          "type": "boolean",
          "mutable": true,
          "attr": "hide",
          "reflectToAttr": true,
          "docs": "Define if message is hidden",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-message')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Message variant",
          "docsTags": [],
          "default": "variants[0]",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-hide",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when message is hidden",
          "docsTags": []
        },
        {
          "event": "component-show",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when message is diplayed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-icon",
        "mg-button"
      ],
      "dependencyGraph": {
        "mg-message": [
          "mg-icon",
          "mg-button"
        ],
        "mg-button": [
          "mg-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/mg-pagination/mg-pagination.tsx",
      "encapsulation": "shadow",
      "tag": "mg-pagination",
      "readme": "This molecule refers to the [PDA9-787](https://jira.mgdis.fr/browse/PDA9-787).\n",
      "docs": "This molecule refers to the [PDA9-787](https://jira.mgdis.fr/browse/PDA9-787).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "currentPage",
          "type": "number",
          "mutable": true,
          "attr": "current-page",
          "reflectToAttr": true,
          "docs": "Component current page",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-pagination')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Panignation label. Is a short description.\nCustomize default value can be usefull to improve accessibility",
          "docsTags": [],
          "default": "'pagination'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "totalPages",
          "type": "number",
          "mutable": false,
          "attr": "total-pages",
          "reflectToAttr": false,
          "docs": "Component total pages",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "current-page-change",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emmited event when current page change",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-button",
        "mg-icon",
        "mg-input-select"
      ],
      "dependencyGraph": {
        "mg-pagination": [
          "mg-button",
          "mg-icon",
          "mg-input-select"
        ],
        "mg-button": [
          "mg-icon"
        ],
        "mg-input-select": [
          "mg-tooltip",
          "mg-icon",
          "mg-input-title",
          "mg-character-left"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/mg-popover/mg-popover.tsx",
      "encapsulation": "scoped",
      "tag": "mg-popover",
      "readme": "This atom refers to the [PDA9-504](https://jira.mgdis.fr/browse/PDA9-504).\n",
      "docs": "This atom refers to the [PDA9-504](https://jira.mgdis.fr/browse/PDA9-504).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "closeButton",
          "type": "boolean",
          "mutable": false,
          "attr": "close-button",
          "reflectToAttr": false,
          "docs": "Define if popover has a cross button",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "Disable popover",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "display",
          "type": "boolean",
          "mutable": true,
          "attr": "display",
          "reflectToAttr": true,
          "docs": "Display popover",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Sets an `id` attribute.\nNeeded by the input for accessibility `aria-decribedby`.",
          "docsTags": [],
          "default": "createID('mg-popover')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placement",
          "type": "\"auto\" | \"auto-end\" | \"auto-start\" | \"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "Popover placement",
          "docsTags": [],
          "default": "'bottom'",
          "values": [
            {
              "value": "auto",
              "type": "string"
            },
            {
              "value": "auto-end",
              "type": "string"
            },
            {
              "value": "auto-start",
              "type": "string"
            },
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "bottom-end",
              "type": "string"
            },
            {
              "value": "bottom-start",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "left-end",
              "type": "string"
            },
            {
              "value": "left-start",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "right-end",
              "type": "string"
            },
            {
              "value": "right-start",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            },
            {
              "value": "top-end",
              "type": "string"
            },
            {
              "value": "top-start",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-button",
        "mg-icon"
      ],
      "dependencyGraph": {
        "mg-popover": [
          "mg-button",
          "mg-icon"
        ],
        "mg-button": [
          "mg-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/molecules/mg-tabs/mg-tabs.tsx",
      "encapsulation": "scoped",
      "tag": "mg-tabs",
      "readme": "This molecule refers to the [PDA9-604](https://jira.mgdis.fr/browse/PDA9-604).\n",
      "docs": "This molecule refers to the [PDA9-604](https://jira.mgdis.fr/browse/PDA9-604).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "activeTab",
          "type": "number",
          "mutable": true,
          "attr": "active-tab",
          "reflectToAttr": true,
          "docs": "Active tab number\ndefault: first is 1",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Identifier is used for the element ID (id is a reserved prop in Stencil.js)\nIf not set, it will be created.",
          "docsTags": [],
          "default": "createID('mg-tabs')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "items",
          "type": "TabItem[] | string[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Tabs items\nRequired",
          "docsTags": [],
          "values": [
            {
              "type": "TabItem[]"
            },
            {
              "type": "string[]"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Tabs label. Include short tabs description.\nRequired for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "mg-icon",
        "mg-badge"
      ],
      "dependencyGraph": {
        "mg-tabs": [
          "mg-icon",
          "mg-badge"
        ]
      }
    },
    {
      "filePath": "./src/components/atoms/mg-tag/mg-tag.tsx",
      "encapsulation": "shadow",
      "tag": "mg-tag",
      "readme": "This atom refers to the [PDA9-637](https://jira.mgdis.fr/browse/PDA9-637).\n",
      "docs": "This atom refers to the [PDA9-637](https://jira.mgdis.fr/browse/PDA9-637).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "outline",
          "type": "boolean",
          "mutable": false,
          "attr": "outline",
          "reflectToAttr": false,
          "docs": "Define if button is using outline style",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Define button variant",
          "docsTags": [],
          "default": "variants[0]",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/atoms/mg-tooltip/mg-tooltip.tsx",
      "encapsulation": "scoped",
      "tag": "mg-tooltip",
      "readme": "This atom refers to the [PDA9-313](https://jira.mgdis.fr/browse/PDA9-313).\n",
      "docs": "This atom refers to the [PDA9-313](https://jira.mgdis.fr/browse/PDA9-313).",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "Disable tooltip",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "display",
          "type": "boolean",
          "mutable": true,
          "attr": "display",
          "reflectToAttr": true,
          "docs": "Display tooltip",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Sets an `id` attribute.\nNeeded by the input for accessibility `aria-decribedby`.",
          "docsTags": [],
          "default": "createID('mg-tooltip')",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "message",
          "type": "string",
          "mutable": false,
          "attr": "message",
          "reflectToAttr": false,
          "docs": "Displayed message in the tooltip",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "placement",
          "type": "\"auto\" | \"auto-end\" | \"auto-start\" | \"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "Tooltip placement",
          "docsTags": [],
          "default": "'bottom'",
          "values": [
            {
              "value": "auto",
              "type": "string"
            },
            {
              "value": "auto-end",
              "type": "string"
            },
            {
              "value": "auto-start",
              "type": "string"
            },
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "bottom-end",
              "type": "string"
            },
            {
              "value": "bottom-start",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "left-end",
              "type": "string"
            },
            {
              "value": "left-start",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "right-end",
              "type": "string"
            },
            {
              "value": "right-start",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            },
            {
              "value": "top-end",
              "type": "string"
            },
            {
              "value": "top-start",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "mg-input-checkbox",
        "mg-input-date",
        "mg-input-numeric",
        "mg-input-password",
        "mg-input-radio",
        "mg-input-select",
        "mg-input-text",
        "mg-input-textarea",
        "mg-input-toggle"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "mg-input-checkbox": [
          "mg-tooltip"
        ],
        "mg-input-date": [
          "mg-tooltip"
        ],
        "mg-input-numeric": [
          "mg-tooltip"
        ],
        "mg-input-password": [
          "mg-tooltip"
        ],
        "mg-input-radio": [
          "mg-tooltip"
        ],
        "mg-input-select": [
          "mg-tooltip"
        ],
        "mg-input-text": [
          "mg-tooltip"
        ],
        "mg-input-textarea": [
          "mg-tooltip"
        ],
        "mg-input-toggle": [
          "mg-tooltip"
        ]
      }
    }
  ]
}